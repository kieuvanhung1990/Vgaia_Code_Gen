<%-- 
Name:
Author: 
Description: 
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="1. Context"
	Description="Table that the stored procedures should be based on." %>	

<%@ Property Name="HelpFormCode" Type="System.String" Default="1000" Category="1. Context" Description="Help Form Code" %>
<%@ Property Name="PackageFormCode" Type="System.String" Default="1000" Category="1. Context" Description="Package Form Code" %>

<%@ Property Name="Author" Type="System.String" Default="Goline Coporation" Category="1. Context" Description="Author" %>
<%@ Property Name="Package" Type="System.String" Default="Package" Category="1. Context" Description="Author kage" %>

<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SampleStringProperty" Type="System.String" Default="SomeValue" Optional="True" Category="Strings" Description="This is a sample string property." %>
<%@ Property Name="SampleBooleanProperty" Type="System.Boolean" Default="True" Optional="False" Category="Booleans" Description="This is a sample boolean property." %>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%-- Assembly References --%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="System.Data" %>
<%-- Namespace Imports --%>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="System.IO" %>
<!-- #include file="..\\..\\include\\GolineUtilities.inc" -->
/*
 * Copyright(C) 2012 Okasan Information Systems Co.,Ltd. All rights reserved.
 * 
 * 
 */
package jp.co.okasan.dao;

import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;

import jp.co.nec.frw0100.ap.dao.BaseData;
import jp.co.nec.frw0000.cm.Frw00RuntimeException;
import jp.co.nec.frw0100.ap.dao.*;
/**
 * <%=this.GetTablename(SourceTable)%>Data Class's Description. <br>
 * <UL>
 * <LI></LI>
 * </UL>
 * @author: <%=Author%> <%=this.GetCurrentDate()%> Create new
 */
public class <%=this.GetTablename(SourceTable)%>Data
	extends BaseData
	implements <%=this.GetTablename(SourceTable)%>Const {
	
	////////// Class Variables //////////
	
	/** Target object data*/
	private <%=this.GetTablename(SourceTable)%>Target target = null;
	
	////////// Class Constructor //////////
		
	/**
	 * Constructor. <br>
	 * Call from base tamplate 
	 * @param Nothing
	 * @exception Nothing
	 */
	public <%=this.GetTablename(SourceTable)%>Data() {
		super();
		target = new <%=this.GetTablename(SourceTable)%>Target();
		<%foreach(ColumnSchema col in SourceTable.Columns){%>
		set<%=this.GetColumnName(col)%>((<%=this.GetColumnDataType(col)%>)null);
		<%}%>
	}
	
	////////// Class Methods //////////
	
	<%foreach( ColumnSchema col in SourceTable.Columns){%>
	/**
	 * Set <%=this.GetColumnName(col)%><BR>
	 * @param value <%=this.GetColumnName(col)%>
	 * @exception Nothing
	 */
	public void set<%=this.GetColumnName(col)%>(<%=this.GetColumnDataType(col)%> value) {
		items.put(<%=col.Name%>, value);
		target.set<%=this.GetColumnName(col)%>(true);
	}
	
	<%if(!this.ColumnIsString(col)){%>
	/**
	 * Set <%=this.GetColumnName(col)%> from String<BR>
	 * @param value <%=this.GetColumnName(col)%>
	 * @exception Nothing
	 */
	public void set<%=this.GetColumnName(col)%>St(String value) {
		<%if(this.IsNumberColumn(col)){%>
		BigDecimal setValue = null;
		if (value != null) {
			try {
				setValue = new BigDecimal(value);
			} catch (NumberFormatException ex) {
				throw new Frw00RuntimeException(
					"Number is not Format");
			}
		}
		set<%=this.GetColumnName(col)%>(setValue);
		<%}else{%>
		Timestamp setValue = null;
		if (value != null) {
			setValue = Convert.toTimestamp(value);
			if (setValue == null) {
				throw new Frw00RuntimeException(
					"Timestamp is not format");
			}
		}
		set<%=this.GetColumnName(col)%>(setValue);
		<%}%>
	}
	<%}%>
	
	<%}%>
	<%foreach( ColumnSchema col in SourceTable.Columns){%>
	/**
	 * Get <%=this.GetColumnName(col)%><BR>
	 * @param Nothing
	 * @return <%=this.GetColumnName(col)%> value
	 * @exception Nothing
	 */
	public <%=this.GetColumnDataType(col)%> get<%=this.GetColumnName(col)%>() {
		return (<%=this.GetColumnDataType(col)%>)items.get(<%=col.Name%>);
	}
	
	<%if(!this.ColumnIsString(col)){%>
	/**
	 * Get <%=this.GetColumnName(col)%> <br>
	 * @param Nothing
	 * @return <%=this.GetColumnName(col)%> String value
	 * @exception Nothing
	 */
	public String get<%=this.GetColumnName(col)%>St() {
		if(items.get(<%=col.Name%>)!= null){
			return items.get(<%=col.Name%>).toString();
		}else{
			return "";
		}
	}
	
	<%}%>
	<%}%>
	
	/**
	 * Get all columns data <br>
	 * @param  Nothing
	 * @return List data of field in content 
	 * @exception Nothing
	 */
	public List getColumnData() {
		List columnData = new ArrayList();
		<%foreach(ColumnSchema col in this.SourceTable.Columns){%>
		columnData.add(get<%=this.GetColumnName(col)%>());
		<%}%>
		return columnData;
	}
	
	/**
	 * Get all SQL Types of table <BR>
	 * @param Nothing
	 * @return list SQL Types
	 * @exception Nothing
	 */
	public int[] getSqlTypes() {
		return SQLTYPES;
	}

	/**
	 * Get target data <br>
	 * @param Nothing
	 * @return Target data
	 * @exception  Nothing
	 */
	public Target getTarget() {
		return target;
	}

	/**
	 * Reset target for select <br>
	 * @param Nothing
	 * @exception Nothing
	 */
	public void resetTarget() {
		target.reset();
	}
}

<script runat="template">
// My methods here.

public string SampleMethod()
{
	return "Method output.";
}
</script>