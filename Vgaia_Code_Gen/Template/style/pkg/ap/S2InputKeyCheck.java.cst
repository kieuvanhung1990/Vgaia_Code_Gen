<%-- 
Name:
Author: 
Description: 
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="1. Context"
	Description="Table that the stored procedures should be based on." %>	

<%@ Property Name="HelpFormCode" Type="System.String" Default="1000" Category="1. Context" Description="Help Form Code" %>
<%@ Property Name="PackageFormCode" Type="System.String" Default="1000" Category="1. Context" Description="Package Form Code" %>

<%@ Property Name="Author" Type="System.String" Default="Goline Coporation" Category="1. Context" Description="Author" %>
<%@ Property Name="Package" Type="System.String" Default="mst" Category="1. Context" Description="Author kage" %>

<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SampleStringProperty" Type="System.String" Default="SomeValue" Optional="True" Category="Strings" Description="This is a sample string property." %>
<%@ Property Name="SampleBooleanProperty" Type="System.Boolean" Default="True" Optional="False" Category="Booleans" Description="This is a sample boolean property." %>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%-- Assembly References --%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="System.Data" %>
<%-- Namespace Imports --%>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="System.IO" %>
<!-- #include file="..\\..\\..\\include\\GolineUtilities.inc" -->
/*
 * Copyright(C) 2012 Okasan Information Systems Co.,Ltd. All rights reserved.
 */
package jp.co.okasan.ap.<%=Package%>.<%=Package%><%=this.PackageFormCode%>;

import java.sql.SQLException;

import jp.co.nec.com0000.ap.Context;
import jp.co.nec.com0000.ap.IStage;
import jp.co.nec.frw0000.ap.Frw00InstanceFactory;
import jp.co.nec.frw0000.cm.logging.Frw00Logger;

import jp.co.okasan.cmn.ConstantValues;
import jp.co.okasan.cmn.ItemValidator;
import jp.co.okasan.cm.<%=Package%>.<%=Package%><%=PackageFormCode%>.<%=this.GetInputDataName(this.Package, this.PackageFormCode)%>;

/**
 * S2InputKeyCheck class's Description <br>
 * 
 * @author: <%=this.Author%> <%=this.GetCurrentDate()%> Create New
 */
public class S2InputKeyCheck implements IStage {
	
	////////// Class variables //////////
	
	/** Class name of initial stage */
	private static final String CLASS_NAME = S2InputKeyCheck.class.getName();
	
	/** Method name of initial stage */
	private static final String METHOD_NAME = "doTask";
	
	////////// Class Constructor //////////
	
	/**
	 * Constructor <br>
	 * 
	 * @param Nothing
	 * @exception Nothing
	 */
	public S2InputKeyCheck() {
	}
	
	////////// Class Methods //////////
	
	/**
	 * Create business route. <BR>
	 * 
	 * @param factory Frw00InstanceFactory instance of Factory
	 * @exception Nothing
	 */
	public void create(Frw00InstanceFactory factory) {
	}
	
	/**
	 * Process input key check task <BR>
	 * 
	 * @param ctx Context the contextual of <%=this.GetTableDescription(this.SourceTable)%>
	 * @return boolean dotask stage
	 * @exception SQLException
	 */
	public boolean doTask(Context ctx) throws SQLException {
		final Frw00Logger logger = ctx.getLogger();
		logger.writeTrace(CLASS_NAME, METHOD_NAME, "enter");

		// validate key
		validateKey(ctx);

		logger.writeTrace(CLASS_NAME, METHOD_NAME, "exit");
		return true;
	}
	
	/**
	 * Validate the key <br>
	 * 
	 * @param ctx Context the contextual of <%=this.GetTableDescription(this.SourceTable)%>
	 * @exception
	 */
	private void validateKey(Context ctx) {
		// Get input data
		<%=this.GetInputDataName(this.Package, this.PackageFormCode)%> inputData = ((<%=this.GetContextName(this.Package, this.PackageFormCode)%>) ctx).getInputData();
		
		<%foreach(ColumnSchema column in SourceTable.PrimaryKey.MemberColumns){%>
		// Check <%=this.GetColumnDescription(column)%>
		ItemValidator.checkValue(ConstantValues.TYPE_MANDATORY, inputData.get<%=this.GetColumnName(column)%>(), 1, "<%=this.GetColumnNameParam(column)%>");
		// ItemValidator.check<%=this.GetColumnName(column)%>(inputData.get<%=this.GetColumnName(column)%>(), "<%=this.GetColumnNameParam(column)%>"); 
		
		<%}%>
	}
}
<script runat="template">
// My methods here.

public string SampleMethod()
{
	return "Method output.";
}
</script>