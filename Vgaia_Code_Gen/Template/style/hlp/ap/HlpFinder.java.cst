<%-- 
Name:
Author: 
Description: 
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="1. Context"
	Description="Table that the stored procedures should be based on." %>	

<%@ Property Name="HelpFormCode" Type="System.String" Default="1000" Category="1. Context" Description="Help Form Code" %>
<%@ Property Name="PackageFormCode" Type="System.String" Default="1000" Category="1. Context" Description="Package Form Code" %>

<%@ Property Name="Author" Type="System.String" Default="Goline Coporation" Category="1. Context" Description="Author" %>
<%@ Property Name="Package" Type="System.String" Default="Package" Category="1. Context" Description="Author kage" %>

<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SampleStringProperty" Type="System.String" Default="SomeValue" Optional="True" Category="Strings" Description="This is a sample string property." %>
<%@ Property Name="SampleBooleanProperty" Type="System.Boolean" Default="True" Optional="False" Category="Booleans" Description="This is a sample boolean property." %>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%-- Assembly References --%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="System.Data" %>
<%-- Namespace Imports --%>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="System.IO" %>
<!-- #include file="..\\..\\..\\include\\GolineUtilities.inc" -->
/*
 * Copyright(C) 2012 Okasan Information Systems Co.,Ltd. All rights reserved.
 */

package jp.co.okasan.ap.hlp.hlp<%=this.HelpFormCode%>;

import java.sql.SQLException;
import java.util.List;

import jp.co.nec.frw0100.ap.dao.SqlOrder;
import jp.co.nec.frw0100.ap.dao.SqlParam;
import jp.co.nec.frw0100.ap.dao.SqlWhere;
import jp.co.okasan.cmn.ConstantValues;
import jp.co.okasan.cmn.ItemValidator;
import jp.co.okasan.dao.Base<%=this.GetTablename(this.SourceTable)%>Finder;
import jp.co.okasan.dao.<%=this.GetTablename(this.SourceTable)%>Const;
import jp.co.okasan.dao.<%=this.GetTablename(this.SourceTable)%>Target;
import jp.co.okasan.cm.hlp.hlp<%=this.HelpFormCode%>.Hlp<%=this.HelpFormCode%>InputData;

/**
 * <%=this.GetTablename(this.SourceTable)%>Finder Class's Description <br>
 * 
 * @author: <%=this.Author%> <%=this.GetCurrentDate()%> Create New
 */
public class <%=this.GetTablename(this.SourceTable)%>Finder extends Base<%=this.GetTablename(this.SourceTable)%>Finder {
	
	////////// Class methods //////////
	
	/**
	 * Search data <br>
	 * @param Nothing
	 * @return list data response
	 * @exception SQLException have failure when search data
	 */
	protected List getDataForSearch() throws SQLException {
	
		// Create SQL Where
        SqlWhere where = new SqlWhere();
		
		// DEL_CD 
        SqlParam paramDelCD = new SqlParam();
        paramDelCD.addParameter(ConstantValues.NOT_DEL);              
        where.addCondition(<%=this.GetTablename(this.SourceTable)%>Const.DEL_CD + " = ?", paramDelCD);
		
		// Create target data
        <%=this.GetTablename(this.SourceTable)%>Target registrationTarget = new <%=this.GetTablename(this.SourceTable)%>Target(true);
				
		// Crete order data
        SqlOrder order = new SqlOrder();
		<%foreach(ColumnSchema column in SourceTable.PrimaryKey.MemberColumns){%>
		order.addAscending(<%=column.Name%>);
		<%}%>
				
		return super.select(where, registrationTarget, order);
	}
	
	/**
	 * Search data with input search<br>
	 * @param Nothing
	 * @return list data response
	 * @exception SQLException have failure when search data
	 */
	protected List getDataForSearch(Hlp<%=this.HelpFormCode%>InputData inputData) throws SQLException {
	
		// Create SQL Where
        SqlWhere where = new SqlWhere();
		
		// add some condition to search here.
		
		// DEL_CD 
        SqlParam paramDelCD = new SqlParam();
        paramDelCD.addParameter(ConstantValues.NOT_DEL);              
        where.addCondition(<%=this.GetTablename(this.SourceTable)%>Const.DEL_CD + " = ?", paramDelCD);
		
		// Create target data
        <%=this.GetTablename(this.SourceTable)%>Target registrationTarget = new <%=this.GetTablename(this.SourceTable)%>Target(true);
				
		// Crete order data
        SqlOrder order = new SqlOrder();
		<%foreach(ColumnSchema column in SourceTable.PrimaryKey.MemberColumns){%>
		order.addAscending(<%=column.Name%>);
		<%}%>
				
		return super.select(where, registrationTarget, order);
	}
}
<script runat="template">
// My methods here.

public string SampleMethod()
{
	return "Method output.";
}
</script>