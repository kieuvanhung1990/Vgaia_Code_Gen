<%-- 
Name:
Author: 
Description: 
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="True" Description="Template description here." %>

<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="1. Context"
	Description="Table that the stored procedures should be based on." %>
<%@ Property Name="SourceTables" Type="SchemaExplorer.TableSchemaCollection" Category="1. Context"
	Description="Table that the stored procedures should be based on." %>

<%@ Property Name="HelpFormCode" Type="System.String" Default="1000" Category="1. Context" Description="Help Form Code" %>
<%@ Property Name="PackageFormCode" Type="System.String" Default="1000" Category="1. Context" Description="Package Form Code" %>

<%@ Property Name="Author" Type="System.String" Default="Goline Coporation" Category="1. Context" Description="Author" %>
<%@ Property Name="Package" Type="System.String" Default="mst" Category="1. Context" Description="Package name" %>

<%@ Property Name="GeneratePath" Type="System.String" Default="C:\Goline\" Category="2. Options" Description="Path to gen" %>		
<%@ Property Name="DeleteOldData" Type="System.Boolean" Default="false" Category="2. Options" Description="Delete Old Data.." %>	

<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SampleStringProperty" Type="System.String" Default="SomeValue" Optional="True" Category="3. Strings" Description="This is a sample string property." %>
<%@ Property Name="CreateApprovement" Type="System.Boolean" Default="False" Optional="False" Category="2. Options" Description="This is a option to create approvement property." %>
<%@ Property Name="CreateCashMovement" Type="System.Boolean" Default="False" Optional="False" Category="2. Options" Description="This is a option to create cash movement property." %>
<%@ Property Name="CreateSecMovement" Type="System.Boolean" Default="False" Optional="False" Category="2. Options" Description="This is a option to create approvement property." %>
<%@ Property Name="UseMultiTabs" Type="System.Boolean" Default="False" Optional="False" Category="2. Options" Description="This is a option to create multi tab." %>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%-- Assembly References --%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="System.Data" %>
<%@ Assembly Name="ReportControl" Path="..\lib"%>

<%-- Namespace Imports --%>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="System.IO" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Collections.Generic" %>

<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="ReportControl" %>
<!-- #include file="..\\include\\GolineUtilities.inc" -->
<%foreach(SchemaExplorer.TableSchema table in SourceTables){%>

<% Workbook book = new Workbook();%>
<% book.Load("D:\\template.xml");%>
<% int index = 1; int rowindex = 12; %>

<%-- Sheet Outline --%>
<% Worksheet s0 = book.Worksheets[0];%>

<% s0.Table.Rows[0].Cells[2].Data.Text = table.Name.ToUpper();%>

<% string keys = "";%>
<% if(table.HasPrimaryKey){%>
<%foreach( ColumnSchema col in table.PrimaryKey.MemberColumns){%>
	<%if(index < table.PrimaryKey.MemberColumns.Count){%>
	<% keys += col.Name + ",";%>
	<%}else{%>
	<% keys += col.Name;%>
	<%}%>
	<%index++; %>
<%}%>

<%}%>

<% s0.Table.Rows[4].Cells[2].Data.Text = keys;%>

<% index = 1;%>
<% WorksheetRow template = s0.Table.Rows[rowindex];%>
<%foreach( ColumnSchema col in table.Columns){%>
	<% WorksheetRow row = createRow(template);%>
	<% row.Cells[0].Data.Text = index.ToString();%>
	<% row.Cells[0].Data.Type = DataType.Number;%>
	
	<% row.Cells[2].Data.Text = col.Name.ToString();%>
	<% row.Cells[2].Data.Type = DataType.String;%>
	
	<% row.Cells[3].Data.Text = col.NativeType.ToString();%>
	<% row.Cells[3].Data.Type = DataType.String;%>
	
	<% row.Cells[4].Data.Text = col.Size.ToString();%>
	<% row.Cells[4].Data.Type = DataType.String;%>
	
	<%if(!col.AllowDBNull){%>
	<% row.Cells[6].Data.Text = "T";%>
	<% row.Cells[6].Data.Type = DataType.String;%>
	<%}%>
	<% switch(col.Name){%>
	<%case "BranchCode":%>
	<% row.Cells[7].Data.Text = "M? chi nh?nh";%>
	<%break;%>
	<%case "FromValue":%>
	<% row.Cells[7].Data.Text = "Gi? tr? t?";%>
	<%break;%>
	<%case "Board":%>
	<% row.Cells[7].Data.Text = "S?n giao d?ch";%>
	<%break;%>
	<%case "Side":%>
	<% row.Cells[7].Data.Text = "Lo?i mua/b?n";%>
	<%break;%>
	<%case "Channel":%>
	<% row.Cells[7].Data.Text = "K?nh giao d?ch";%>
	<%break;%>
	<%case "ApprovedDate":%>
	<% row.Cells[7].Data.Text = "Ng?y duy?t";%>
	<%break;%>
	<%case "ApprovedUserId":%>
	<% row.Cells[7].Data.Text = "Ng??i duy?t";%>
	<%break;%>
	
	<%case "CreatedDate":%>
	<% row.Cells[7].Data.Text = "Ng?y t?o";%>
	<%break;%>
	
	<%case "CreatedUserId":%>
	<% row.Cells[7].Data.Text = "Ng??i t?o";%>
	<%break;%>
	
	<%case "UpdatedDate":%>
	<% row.Cells[7].Data.Text = "Ng?y c?p nh?t";%>
	<%break;%>
	
	<%case "UpdatedUserId":%>
	<% row.Cells[7].Data.Text = "Ng??i c?p nh?t";%>
	<%break;%>
		
	<%case "TransactionDate":%>
	<% row.Cells[7].Data.Text = "Ng?y GD";%>
	<%break;%>
		
	<%case "RequestType":%>
	<% row.Cells[7].Data.Text = "Lo?i y?u c?u";%>
	<%break;%>
	
	<%case "RequestTime":%>
	<% row.Cells[7].Data.Text = "Th?i gian y?u c?u";%>
	<%break;%>
	
	<%case "OrderType":%>
	<% row.Cells[7].Data.Text = "Lo?i l?nh";%>
	<%break;%>
	
	<%case "Symbol":%>
	<% row.Cells[7].Data.Text = "M? ch?ng kho?n";%>
	<%break;%>
	
	<%case "SymbolType":%>
	<% row.Cells[7].Data.Text = "Lo?i ch?ng kho?n";%>
	<%break;%>
	
	<%case "Volume":%>
	<%case "Quantity":%>
	<% row.Cells[7].Data.Text = "Kh?i l??ng";%>
	<%break;%>
	
	<%case "Price":%>
	<% row.Cells[7].Data.Text = "Gi?";%>
	<%break;%>
	
	<%case "Firm":%>
	<% row.Cells[7].Data.Text = "Firm";%>
	<%break;%>
	
	<%case "TraderId":%>
	<% row.Cells[7].Data.Text = "M? TraderId";%>
	<%break;%>
	
	<%case "BranchName":%>
	<% row.Cells[7].Data.Text = "T?n chi nh?nh";%>
	<%break;%>
	
	<%case "UnitCode":%>
	<% row.Cells[7].Data.Text = "M? ?i?m giao d?ch";%>
	<%break;%>
	
	<%case "UnitName":%>
	<% row.Cells[7].Data.Text = "T?n ?i?m GD";%>
	<%break;%>
	
	<%case "FeeRate":%>
	<% row.Cells[7].Data.Text = "T? l? ph?";%>
	<%break;%>
	
	<%case "UserEnter":%>
	<% row.Cells[7].Data.Text = "Ng??i nh?p";%>
	<%break;%>
	
	<%case "ClearingCode":%>
	<% row.Cells[7].Data.Text = "Chu k? thanh to?n";%>
	<%break;%>
	
	<%case "MarginRate":%>
	<% row.Cells[7].Data.Text = "T? l? k? qu?";%>
	<%break;%>
	
	<%case "TaxRate":%>
	<% row.Cells[7].Data.Text = "T? l? thu?";%>
	<%break;%>
	
	
	<%case "TransferRate":%>
	<% row.Cells[7].Data.Text = "T? l? ph? chuy?n nh??ng";%>
	<%break;%>
	
	<%case "RightTaxRate":%>
	<% row.Cells[7].Data.Text = "T? l? thu? th?c hi?n quy?n";%>
	<%break;%>
	
	<%case "ServiceType":%>
	<% row.Cells[7].Data.Text = "Lo?i l?nh";%>
	<%break;%>
	
	<%case "ConfirmNo":%>
	<% row.Cells[7].Data.Text = "S? hi?u confirm";%>
	<%break;%>
	
	<%case "ConfirmTime":%>
	<% row.Cells[7].Data.Text = "Th?i gian confirm";%>
	<%break;%>
	
	<%case "OrgOrderNo":%>
	<% row.Cells[7].Data.Text = "S? hi?u l?nh g?c";%>
	<%break;%>
	
	<%case "OrderNo":%>
	<% row.Cells[7].Data.Text = "S? hi?u l?nh s?n";%>
	<%break;%>
	
	<%case "CustomerId":%>
	<% row.Cells[7].Data.Text = "S? t?i kho?n";%>
	<%break;%>
	
	<%case "CustomerFlag":%>
	<% row.Cells[7].Data.Text = "C? ??nh d?u t?i kho?n";%>
	<%break;%>
	
	<%case "CustomerBranchCode":%>
	<% row.Cells[7].Data.Text = "M? chi nh?nh kh?ch h?ng";%>
	<%break;%>
	
	<%case "CustomerUnitCode":%>
	<% row.Cells[7].Data.Text = "M? ?i?m giao d?ch c?a kh?ch h?ng";%>
	<%break;%>
	
	<%case "BankBranchCode":%>
	<% row.Cells[7].Data.Text = "M? ng?n h?ng thanh to?n";%>
	<%break;%>
	
	<%case "Description":%>
	<% row.Cells[7].Data.Text = "M? t?";%>
	<%break;%>
	
	<%case "Notes":%>
	<% row.Cells[7].Data.Text = "Ghi ch?";%>
	<%break;%>
	
	<%case "BeginDate":%>
	<% row.Cells[7].Data.Text = "Ng?y b?t ??u";%>
	<%break;%>
	
	<%case "EndDate":%>
	<% row.Cells[7].Data.Text = "Ng?y k?t th?c";%>
	<%break;%>
	
	<%case "CustomerName":%>
	<% row.Cells[7].Data.Text = "T?n t?i kho?n";%>
	<%break;%>
	
	<%case "InvestorId":%>
	<% row.Cells[7].Data.Text = "M? t?i kho?n";%>
	<%break;%>
	
	<%case "CreatedUser":%>
	<% row.Cells[7].Data.Text = "Ng??i t?o";%>
	<%break;%>
	
	<%case "CreatedTime":%>
	<% row.Cells[7].Data.Text = "Ng?y t?o";%>
	<%break;%>
	
	<%case "UpdatedUser":%>
	<% row.Cells[7].Data.Text = "Ng??i c?p nh?t";%>
	<%break;%>
	
	<%case "UpdatedTime":%>
	<% row.Cells[7].Data.Text = "Ng?y c?p nh?t";%>
	<%break;%>
	
	
	<%}%>
		
	<% s0.Table.Rows.Insert(rowindex++, row);%>
	<% index++;%>
<%}%>

<%
string categoryDir = this.GeneratePath;
if (!Directory.Exists(categoryDir))
	{
		Directory.CreateDirectory(categoryDir);
	}
string path = Path.Combine( categoryDir, table.Name + ".xls");
if(File.Exists(path)){
	File.Delete(path);
}
StreamWriter sw = new StreamWriter(path, true);
sw.Write(book.Save());
sw.Close();
%>

<%}%>
done!
				
<script runat="template">
// My methods here.

public string SampleMethod()
{
	return "Method output.";
}

private WorksheetRow createRow(WorksheetRow template){
	WorksheetRow row = new WorksheetRow(template);
	foreach (WorksheetCell cell in template.Cells)
	{
		row.Cells.Add(cell.Data.Text, cell.Data.Type, cell.StyleID);
	}

	return row;
}

</script>