<%-- 
Name:
Author: 
Description: 
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="1. Context"
	Description="Table that the stored procedures should be based on." %>	

<%@ Property Name="FormName" Type="System.String" Default="1000" Category="1. Context" Description="Form name" %>
<%@ Property Name="UpdaterCode" Type="System.String" Default="1000" Category="1. Context" Description="Package Form Code" %>

<%@ Property Name="Author" Type="System.String" Default="Huan.Nguyen Van" Category="1. Context" Description="Author" %>
<%@ Property Name="Package" Type="System.String" Default="Package" Category="1. Context" Description="Author kage" %>
<%@ Property Name="Prefix" Type="System.String" Default="Pkg" Category="1. Context" Description="Prefix " %>
<%@ Property Name="EntityName" Type="System.String" Default="EntityName" Category="1. Context" Description="Name of entity" %>

<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SampleStringProperty" Type="System.String" Default="SomeValue" Optional="True" Category="Strings" Description="This is a sample string property." %>
<%@ Property Name="SampleBooleanProperty" Type="System.Boolean" Default="True" Optional="False" Category="Booleans" Description="This is a sample boolean property." %>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%-- Assembly References --%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="System.Data" %>
<%-- Namespace Imports --%>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="System.IO" %>
<!-- #include file="..\include\GolineUtilities.inc" -->

$(document).ready(function() {

	// Reset input form
	resetInputForm();

	$('.setscroll_body_<%=this.FormName%>_table').mCustomScrollbar({
		autoHideScrollbar : true
	});
	$('.setscroll_body_<%=this.FormName%>_table .mCSB_scrollTools').css({
		left : '934px'
	});
	$('.horizontalScroll_body_<%=this.FormName%>_table').mCustomScrollbar({
		horizontalScroll : true,
		callbacks : {
			whileScrolling : function() {
				left = 950 - mcs.left - 16;
				$('.setscroll_body_<%=this.FormName%>_table .mCSB_scrollTools').css({
					left : left + 'px'
				});
				$('#head_<%=this.FormName%>_table').css({
					left : mcs.left + 'px'
				});
			}
		},
		autoHideScrollbar : true
	});
	
	inputEventHandler();
	
	$('select').select2();
	
	find<%=this.EntityName%>();
});

function resetInputForm(){
	var form = $('.top_box .content_box table');
	<%foreach ( ColumnSchema col in SourceTable.Columns ){%>
	form.find('.<%=this.GetColumnNameParam(col)%>').val('');
	<%}%>
	
	// Reset default button
	form.find('#btnAdd').removeClass('hide');
	form.find('#btnUpdate').addClass('hide');
}

function inputEventHandler(){
	var form = $('.top_box .content_box table');
	<%string prevControl = string.Empty;%>
	<%foreach ( ColumnSchema col in SourceTable.Columns ){%>
		<%if(!string.IsNullOrEmpty(prevControl)){%>
	enterKeyPress(form, '.<%=prevControl%>', '.<%=this.GetColumnNameParam(col)%>');
		<%}%>
		<%prevControl = this.GetColumnNameParam(col);%>
	<%}%>
	
	form.find('#btnAdd').click(function() {
		addNew();
	});

	form.find('#btnUpdate').click(function() {
		update();
	});

	form.find('#btnReset').click(function() {
		resetInputForm();
	});
	
	$('.filter').find('#btnSearch').click(function() {
		find<%=this.EntityName%>();
	});
}

function enterKeyPress(form, control, nextControl){
	form.find(control).keydown(function(event){
		var keyCode = event.keyCode ? event.keyCode : event.keyWhich;
		if(keyCode == 13 && $(this).val() != ''){
			form.find(nextControl).focus();
		}
	});
}

function find<%=this.EntityName%>() {

	var filter = $('.bottom_box .filter');

	// Get input

	showLoadingBig();
	onlineClientService.find<%=this.EntityName%>({
		callback : function(data) {
			hideLoading();
			var table = $('#body_<%=this.FormName%>_table');
			table.empty();

			if(data.statusCode != 0){
				showErrDialog(data.message);
				return;
			}
			
			if (data.data != null) {

				initPaging(data.data,'loadDataGrid','#<%=this.FormName%>_table');										

				loadDataGrid(getPagingData(1,data.data));	
			} else {
				table.empty();
			}
		}
	});
}

function loadDataGrid(list){
	var table = $('#body_<%=this.FormName%>_table').empty();
	
	for ( var i = 0; i < list.length; i++) {
		addRow(table, list[i]);
	}
	
	// Update scroll bar
	$('.setscroll_body_<%=this.FormName%>_table').mCustomScrollbar('update');
	
	// Register event
	$('#body_<%=this.FormName%>_table .column0 .btnUpdate').click(function() {
		bindDataForUpdate($(this).closest('.row'));
	});

	$('#body_<%=this.FormName%>_table .column0 .btnDelete').click(function() {
		deleteRow($(this).closest('.row'));
	});
}

function addRow(table, data) {
	if (data != null) {
		var strRow = '<div class="row">'
		strRow += '<div class="column0 w60px">';
		strRow += '<div class="deleteUpdate">';
		strRow += '<a class="btnUpdate" href="javascript:void(0);">S?a</a>&nbsp;|&nbsp;';
		strRow += '<a class="btnDelete" href="javascript:void(0);">X?a</a>';
		strRow += '</div>';
		strRow += '</div>';
		
		<%int count =1;%>
		<%foreach ( ColumnSchema col in SourceTable.Columns ){%>
		strRow += '<div class="column<%=count.ToString()%> w60px <%=this.GetColumnNameParam(col)%>">';
		strRow += convertNullToBlank(data.<%=this.GetColumnNameParam(col)%>);
		<%if(col.Name=="ID" || col.Name=="STATUS" || col.Name =="UPD_DATE_TIME"){%>strRow += '<input type="hidden" id="<%=this.GetColumnNameParam(col)%>" value="' + data.<%=this.GetColumnNameParam(col)%> + '">';<%}%>
		strRow += '</div>';
		<%count++;%>
		<%}%>
		
		table.append(strRow);
	}
}

function bindDataForUpdate(selectedRow) {
	// Get data from row
	<%foreach ( ColumnSchema col in SourceTable.Columns ){%>
	<%if(col.Name == "ID" || col.Name=="STATUS" || col.Name =="UPD_DATE_TIME"){%>
	var <%=this.GetColumnNameParam(col)%> = selectedRow.find('#<%=this.GetColumnNameParam(col)%>').val();
	<%}else{%>
	var <%=this.GetColumnNameParam(col)%> = selectedRow.find('.<%=this.GetColumnNameParam(col)%>').text().trim();
	<%}%>
	<%}%>
	
	// Bind to edit 
	var form = $('.top_box .content_box table');
	<%foreach ( ColumnSchema col in SourceTable.Columns ){%>
	form.find('.<%=this.GetColumnNameParam(col)%>').val(<%=this.GetColumnNameParam(col)%>);
	<%}%>
	
	// Hide add button
	form.find('#btnAdd').addClass('hidden');
	form.find('#btnUpdate').removeClass('hidden');
}

function addNew() {	
	var form = $('.top_box .content_box table');

	<%foreach ( ColumnSchema col in SourceTable.Columns ){%>
	var <%=this.GetColumnNameParam(col)%> = form.find('.<%=this.GetColumnNameParam(col)%>').val();
	<%}%>
		
	showLoadingBig();
	onlineClientService.create<%=this.EntityName%>(<%foreach ( ColumnSchema col in SourceTable.Columns ){%><%=this.GetColumnNameParam(col)%>, <%}%>{
		callback : function(data) {
			
			hideLoading();
			
			if (data.statusCode == 0 && data.data != null) {

				showInfoDialog(message_insertSuccess);

				// Reset input
				resetInputForm();
				find<%=this.EntityName%>();
			} else {
				showErrDialog(data.message);
				var list = data.controlIdList;
				if(list != null){
					for(var i = 0; i< list.length; i++){
						fillErrorBorderControl(list[i]);
					}
				}
			}
		}
	});
}

function update() {
	var form = $('.top_box .content_box table');
	
	<%foreach ( ColumnSchema col in SourceTable.Columns ){%>
	var <%=this.GetColumnNameParam(col)%> = form.find('.<%=this.GetColumnNameParam(col)%>').val();
	<%}%>
	
	var updTimeObj = null;
	
	if(updDateTime != null && updDateTime != ''){
		updTimeObj = new Date(updDateTime);
	}
	
	showLoadingBig();
	onlineClientService.update<%=this.EntityName%>(<%foreach ( ColumnSchema col in SourceTable.Columns ){%><%if(!this.isUpdColumn(col)){%><%=this.GetColumnNameParam(col)%>, <%}}%>updTimeObj,{
		callback : function(data) {
			
			hideLoading();
			
			if (data.statusCode == 0 && data.data != null) {

				showInfoDialog("update is OK");

				resetInputForm();
				find<%=this.EntityName%>();
			} else {
				showErrDialog(data.message);
				var list = data.controlIdList;
				if(list != null){
					for(var i = 0; i< list.length; i++){
						fillErrorBorderControl(list[i]);
					}
				}
			}
		}
	});
}

function deleteRow(selectedRow) {

	var id = selectedRow.find('#id').val();
	var name = selectedRow.find('.column2').text().trim();
	
	var updDateTime = selectedRow.find('#updDateTime').val();
	var updTimeObj = null;
	
	if(updDateTime != null && updDateTime != ''){
		updTimeObj = new Date(updDateTime);
	}
	
	var dialog = showConfirmDialog('Delete ?');
	
	dialog.on('click', '#btnConfirm' ,function() {
		
		dialog.bPopup().close();
		
		showLoadingBig();
		onlineClientService.delete<%=this.EntityName%>(id, updTimeObj, {
			callback : function(data) {
				
				hideLoading();
				
				if (data.statusCode == 0 && data.data != null) {

					showInfoDialog(message_deleteSuccess);
					find<%=this.EntityName%>();
				} else {
					showErrDialog(data.message);
				}
			}
		});
	});
}
	
<script runat="template">
// My methods here.

public string SampleMethod()
{
	return "Method output.";
}
</script>