<%-- 
Name:
Author: 
Description: 
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="1. Context"
	Description="Table that the stored procedures should be based on." %>	

<%@ Property Name="FormName" Type="System.String" Default="1000" Category="1. Context" Description="Form name" %>
<%@ Property Name="UpdaterCode" Type="System.String" Default="1000" Category="1. Context" Description="Package Form Code" %>

<%@ Property Name="Author" Type="System.String" Default="Huan.Nguyen Van" Category="1. Context" Description="Author" %>
<%@ Property Name="Package" Type="System.String" Default="Package" Category="1. Context" Description="Author kage" %>
<%@ Property Name="Prefix" Type="System.String" Default="Pkg" Category="1. Context" Description="Prefix " %>
<%@ Property Name="EntityName" Type="System.String" Default="EntityName" Category="1. Context" Description="Name of entity" %>

<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SampleStringProperty" Type="System.String" Default="SomeValue" Optional="True" Category="Strings" Description="This is a sample string property." %>
<%@ Property Name="SampleBooleanProperty" Type="System.Boolean" Default="True" Optional="False" Category="Booleans" Description="This is a sample boolean property." %>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%-- Assembly References --%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="System.Data" %>
<%-- Namespace Imports --%>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="System.IO" %>
<!-- #include file="..\include\GolineUtilities.inc" -->
<%int index = 1; %>
<%int count = 1;%>
<%string paramList = "";%>
<%string paramAndTypeList = "";%>
<%foreach ( ColumnSchema col in SourceTable.NonPrimaryKeyColumns ){%>
	<%if(!this.isSpecialColumn(col)){%>
		<% paramAndTypeList += string.Format("{0} {1}, ", this.GetFrontColumnDataType(col), this.GetColumnNameParam(col));%>
		<% paramList += string.Format("{0}, ", this.GetColumnNameParam(col));%>
	<%}%>
<%}%>
<%if(!string.IsNullOrEmpty(paramList)){%>
	<%paramList = paramList.Trim();%>
	<%paramList = paramList.Substring(0, paramList.Length - 1);%>
<%}%>
<%if(!string.IsNullOrEmpty(paramAndTypeList)){%>
	<%paramAndTypeList = paramAndTypeList.Trim();%>
	<%paramAndTypeList = paramAndTypeList.Substring(0, paramAndTypeList.Length - 1);%>
<%}%>
	/**
	 * Method insert an record in to table <br>
	 * 
	 * @param user BaseUser current User
	 * @param data <%=this.EntityName%>
	 * @throws SQLException 
	 */
	<%=this.EntityName%> create<%=this.EntityName%>(User user, <%=paramAndTypeList%>)
			throws ApplicationException, Exception;
	
	/**
	 * Method update an record from table <br>
	 * 
	 * @param user BaseUser current User
	 * @param data <%=this.EntityName%>
	 * @param conn Connection
	 * @throws SQLException 
	 */
	<%=this.EntityName%> update<%=this.EntityName%>(User user, BigDecimal id, <%=paramAndTypeList%>, Date updDateTime) throws ApplicationException, Exception;
	
	/**
	 * Method delete an record from table <br>
	 * 
	 * @param user BaseUser current User
	 * @param id identity of <%=this.EntityName%>
	 * @param updDateTime last update time
	 * @throws SQLException 
	 */
	int delete<%=this.EntityName%>(User user, BigDecimal id, Date updDateTime) throws ApplicationException, Exception;
	
	<%index = 1;%>
	<%count = 1;%>
	/**
	 * Select data with where condition. <br>
	 * Return null if have no data.
	 *
	 * @param where Where condition
	 * @return List <%=this.EntityName%> search result
	 * @exception SQLException have failure when search data
	 */
	List<<%=this.EntityName%>> find<%=this.EntityName%>(User user) throws ApplicationException, Exception;
<script runat="template">
// My methods here.

public string SampleMethod()
{
	return "Method output.";
}
</script>