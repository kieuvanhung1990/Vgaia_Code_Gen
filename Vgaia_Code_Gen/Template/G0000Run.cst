  <%-- 
Name:
Author: 
Description: 
--%>
<%-- Context --%>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="True" Description="Template description here." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="1. Context"
	Description="Table that the stored procedures should be based on." %>

<%@ Property Name="SubTables" Type="SchemaExplorer.TableSchemaCollection" Optional="True" Category="1. Context" Description="The sub table to generate from." %>

<%@ Property Name="HelpFormCode" Type="System.String" Default="1000" Category="1. Context" Description="Help Form Code" %>
<%@ Property Name="PackageFormCode" Type="System.String" Default="1000" Category="1. Context" Description="Package Form Code" %>

<%@ Property Name="Author" Type="System.String" Default="Goline Coporation" Category="1. Context" Description="Author" %>
<%@ Property Name="Package" Type="System.String" Default="mst" Category="1. Context" Description="Package name" %>

<%@ Property Name="GeneratePath" Type="System.String" Default="C:\Goline\" Category="2. Options" Description="Path to gen" %>		
<%@ Property Name="DeleteOldData" Type="System.Boolean" Default="false" Category="2. Options" Description="Delete Old Data.." %>	
	
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%-- Assembly References --%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="System.Data" %>
<%-- Namespace Imports --%>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="System.IO" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Collections.Generic" %>

<%@ Register Name="Tpl001" Template="master\\MasterScript.cst" %>
<%@ Register Name="Tpl002" Template="style\\dao\\BaseFinder.java.cst" %>
<%@ Register Name="Tpl003" Template="style\\dao\\BaseUpdater.java.cst" %>
<%@ Register Name="Tpl004" Template="style\\dao\\Cmn_Const.java.cst" %>
<%@ Register Name="Tpl005" Template="style\\dao\\Cmn_Data.java.cst" %>
<%@ Register Name="Tpl006" Template="style\\dao\\Cmn_Finder.cst" %>
<%@ Register Name="Tpl007" Template="style\\dao\\Cmn_Info.java.cst" %>
<%@ Register Name="Tpl008" Template="style\\dao\\Cmn_Reader.java.cst" %>
<%@ Register Name="Tpl009" Template="style\\dao\\Cmn_Target.java.cst" %>
<%@ Register Name="Tpl010" Template="style\\dao\\Cmn_Data.java.cst" %>
<%@ Register Name="Tpl011" Template="style\\hlp\\ap\\HlpContext.java.cst" %>
<%@ Register Name="Tpl012" Template="style\\hlp\\ap\\HlpControl.java.cst" %>
<%@ Register Name="Tpl013" Template="style\\hlp\\ap\\HlpFinder.java.cst" %>
<%@ Register Name="Tpl014" Template="style\\hlp\\ap\\S1Initial.java.cst" %>
<%@ Register Name="Tpl015" Template="style\\hlp\\ap\\S2InputDataCheck.java.cst" %>
<%@ Register Name="Tpl016" Template="style\\hlp\\ap\\S3TableReadCheck.java.cst" %>
<%@ Register Name="Tpl017" Template="style\\hlp\\ap\\S4DataFind.java.cst" %>
<%@ Register Name="Tpl018" Template="style\\hlp\\ap\\S5ScreenDataEdit.java.cst" %>
<%@ Register Name="Tpl019" Template="style\\hlp\\ap\\S7End.java.cst" %>
<%@ Register Name="Tpl020" Template="style\\hlp\\cm\\HlpInputData.java.cst" %>
<%@ Register Name="Tpl021" Template="style\\hlp\\cm\\HlpResultData.java.cst" %>
<%@ Register Name="Tpl022" Template="style\\hlp\\pr\\HlpFrame.java.cst" %>
<%@ Register Name="Tpl023" Template="style\\hlp\\pr\\HlpInput.java.cst" %>
<%@ Register Name="Tpl024" Template="style\\hlp\\pr\\HlpPanel.java.cst" %>
<%@ Register Name="Tpl025" Template="style\\pkg\\ap\\AP01.AnswerOutput.java.cst" %>
<%@ Register Name="Tpl026" Template="style\\pkg\\ap\\AP02.Context.java.cst" %>
<%@ Register Name="Tpl027" Template="style\\pkg\\ap\\AP03.Control.java.cst" %>
<%@ Register Name="Tpl028" Template="style\\pkg\\ap\\AP04.Finder.java.cst" %>
<%@ Register Name="Tpl029" Template="style\\pkg\\ap\\AP05.Updater.java.cst" %>
<%@ Register Name="Tpl030" Template="style\\pkg\\ap\\S1Initial.java.cst" %>
<%@ Register Name="Tpl031" Template="style\\pkg\\ap\\S2InputDataCheck.java.cst" %>
<%@ Register Name="Tpl032" Template="style\\pkg\\ap\\S2InputKeyCheck.java.cst" %>
<%@ Register Name="Tpl033" Template="style\\pkg\\ap\\S3DataExist.java.cst" %>
<%@ Register Name="Tpl034" Template="style\\pkg\\ap\\S3DataNotExist.java.cst" %>
<%@ Register Name="Tpl035" Template="style\\pkg\\ap\\S3TableReadCheck.java.cst" %>
<%@ Register Name="Tpl036" Template="style\\pkg\\ap\\S4DataDelete.java.cst" %>
<%@ Register Name="Tpl037" Template="style\\pkg\\ap\\S4DataEditor.java.cst" %>
<%@ Register Name="Tpl038" Template="style\\pkg\\ap\\S4DataEntry.java.cst" %>
<%@ Register Name="Tpl039" Template="style\\pkg\\ap\\S4DataFind.java.cst" %>
<%@ Register Name="Tpl040" Template="style\\pkg\\ap\\S4DataUpdate.java.cst" %>
<%@ Register Name="Tpl041" Template="style\\pkg\\ap\\S5ScreenDataEdit.java.cst" %>
<%@ Register Name="Tpl042" Template="style\\pkg\\ap\\S6DataOutput.java.cst" %>
<%@ Register Name="Tpl043" Template="style\\pkg\\ap\\S7End.java.cst" %>
<%@ Register Name="Tpl044" Template="style\\pkg\\cm\\CM01.InputData.java.cst" %>
<%@ Register Name="Tpl045" Template="style\\pkg\\cm\\CM02.ResultData.java.cst" %>
<%@ Register Name="Tpl046" Template="style\\pkg\\cm\\CM03.RowData.java.cst" %>
<%@ Register Name="Tpl047" Template="style\\pkg\\pr\\PR01.ChangeInput.java.cst" %>
<%@ Register Name="Tpl048" Template="style\\pkg\\pr\\PR02.Confirm.java.cst" %>
<%@ Register Name="Tpl049" Template="style\\pkg\\pr\\PR03.Const.java.cst" %>
<%@ Register Name="Tpl050" Template="style\\pkg\\pr\\PR04.Frame.java.cst" %>
<%@ Register Name="Tpl051" Template="style\\pkg\\pr\\PR05.Input.java.cst" %>
<%@ Register Name="Tpl052" Template="style\\pkg\\pr\\PR06.Panel.java.cst" %>
<%@ Register Name="Tpl053" Template="style\\pkg\\pr\\PR07.Result.java.cst" %>
<%@ Register Name="Tpl054" Template="master\\Resource.properties.cst" %>


<!-- #include file="include\\GolineUtilities.inc" -->

<%ClearOldData();%>
<%Gen();%>
Success!
<script runat="template">
public void Gen()
{
	StreamWriter sw;
	string filePath;
	string categoryDir;
	CodeTemplate template = null;
	
	#region Master
	categoryDir = string.Format(@"{0}\{1}\master\", GetGenPath(), this.GetTablename(this.SourceTable));
	if (!Directory.Exists(categoryDir))
	{
		Directory.CreateDirectory(categoryDir);
	}
	ClearFolder(categoryDir);
	//MasterScript.cst
	template = CreateTemplate("master\\MasterScript.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}script.txt", categoryDir);
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath), true, Encoding.UTF8);
	
	//MasterScript.cst
	template = CreateTemplate("master\\MasterScreen.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}screen.txt", categoryDir);
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath), true, Encoding.UTF8);
	
	// Resource.properties.cst
	template = CreateTemplate("master\\Resource.properties.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}Resource.properties.txt", categoryDir);
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath), true, Encoding.UTF8);	
		
	// Cmn_GetData.cst
	template = CreateTemplate("master\\Cmn_GetData.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}GetData.txt", categoryDir);
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath), true, Encoding.UTF8);	
	
	#endregion
	
	#region Dao 
	//BaseFinder.java.cst
	categoryDir = string.Format(@"{0}\{1}\dao\", GetGenPath(), this.GetTablename(this.SourceTable));
	if (!Directory.Exists(categoryDir))
	{
		Directory.CreateDirectory(categoryDir);
	}
	ClearFolder(categoryDir);
	template = CreateTemplate("style\\dao\\BaseFinder.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}Base{1}Finder.java", categoryDir, this.GetTablename(this.SourceTable));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	// Sub tables
	if(this.SubTables!= null && this.SubTables.Count >0)
	{
		foreach( SchemaExplorer.TableSchema table in this.SubTables)
		{
			template = CreateTemplate("style\\dao\\BaseFinder.java.cst");
			template.SetProperty("SourceTable", table);
			template.SetProperty("HelpFormCode", HelpFormCode);
			template.SetProperty("PackageFormCode", PackageFormCode);
			template.SetProperty("Package", Package);
			template.SetProperty("Author", Author);
			filePath = string.Format(@"{0}Base{1}Finder.java", categoryDir, this.GetTablename(table));
			sw = GetSW(filePath);
			template.Render(sw);
			sw.Close();
			Response.WriteLine(string.Format("Genrator file {0} ", filePath));
		}
	}
	
	//BaseUpdater.java.cst
	template = CreateTemplate("style\\dao\\BaseUpdater.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}Base{1}Updater.java", categoryDir, this.GetTablename(this.SourceTable));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	// Sub tables
	if(this.SubTables!= null && this.SubTables.Count >0)
	{
		foreach( SchemaExplorer.TableSchema table in this.SubTables)
		{
			template = CreateTemplate("style\\dao\\BaseUpdater.java.cst");
			template.SetProperty("SourceTable", table);
			template.SetProperty("HelpFormCode", HelpFormCode);
			template.SetProperty("PackageFormCode", PackageFormCode);
			template.SetProperty("Package", Package);
			template.SetProperty("Author", Author);
			filePath = string.Format(@"{0}Base{1}Updater.java", categoryDir, this.GetTablename(table));
			sw = GetSW(filePath);
			template.Render(sw);
			sw.Close();
			Response.WriteLine(string.Format("Genrator file {0} ", filePath));
		}
	}
	
	//Cmn_Const.java.cst
	template = CreateTemplate("style\\dao\\Cmn_Const.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}Const.java", categoryDir, this.GetTablename(this.SourceTable));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	// Sub tables
	if(this.SubTables!= null && this.SubTables.Count >0)
	{
		foreach( SchemaExplorer.TableSchema table in this.SubTables)
		{
			template = CreateTemplate("style\\dao\\Cmn_Const.java.cst");
			template.SetProperty("SourceTable", table);
			template.SetProperty("HelpFormCode", HelpFormCode);
			template.SetProperty("PackageFormCode", PackageFormCode);
			template.SetProperty("Package", Package);
			template.SetProperty("Author", Author);
			filePath = string.Format(@"{0}{1}Const.java", categoryDir, this.GetTablename(table));
			sw = GetSW(filePath);
			template.Render(sw);
			sw.Close();
			Response.WriteLine(string.Format("Genrator file {0} ", filePath));
		}
	}
	
	//Cmn_Data.java.cst
	template = CreateTemplate("style\\dao\\Cmn_Data.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}Data.java", categoryDir, this.GetTablename(this.SourceTable));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//Cmn_Info.java.cst
	template = CreateTemplate("style\\dao\\Cmn_Info.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}Info.java", categoryDir, this.GetTablename(this.SourceTable));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//Cmn_Target.java.cst
	template = CreateTemplate("style\\dao\\Cmn_Target.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}Target.java", categoryDir, this.GetTablename(this.SourceTable));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//Cmn_Finder.cst
	template = CreateTemplate("style\\dao\\Cmn_Finder.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}Finder.java", categoryDir, this.GetTablename(this.SourceTable));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//Cmn_Reader.java.cst
	template = CreateTemplate("style\\dao\\Cmn_Reader.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}Reader.java", categoryDir, this.GetTablename(this.SourceTable));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));

	#endregion
	
	#region hlp/ap
	//HlpContext.java.cst
	categoryDir = string.Format(@"{0}\{2}\ap\hlp\hlp{1}\", GetGenPath(), this.HelpFormCode, this.GetTablename(this.SourceTable));
	if (!Directory.Exists(categoryDir))
	{
		Directory.CreateDirectory(categoryDir);
	}
	ClearFolder(categoryDir);
	template = CreateTemplate("style\\hlp\\ap\\HlpContext.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}Hlp{1}Context.java", categoryDir, this.HelpFormCode);
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//HlpControl.java.cst
	template = CreateTemplate("style\\hlp\\ap\\HlpControl.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}Hlp{1}Control.java", categoryDir, this.HelpFormCode);
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//HlpFinder.java.cst
	template = CreateTemplate("style\\hlp\\ap\\HlpFinder.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}Finder.java", categoryDir, this.GetTablename(this.SourceTable));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//S1Initial.java.cst
	template = CreateTemplate("style\\hlp\\ap\\S1Initial.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}S1Initial.java", categoryDir);
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//S2InputDataCheck.java.cst
	template = CreateTemplate("style\\hlp\\ap\\S2InputDataCheck.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}S2InputDataCheck.java", categoryDir);
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//S3TableReadCheck.java.cst
	template = CreateTemplate("style\\hlp\\ap\\S3TableReadCheck.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}S3TableReadCheck.java", categoryDir);
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//S4DataFind.java.cst
	template = CreateTemplate("style\\hlp\\ap\\S4DataFind.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}S4DataFind.java", categoryDir);
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//S5ScreenDataEdit.java.cst
	template = CreateTemplate("style\\hlp\\ap\\S5ScreenDataEdit.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}S5ScreenDataEdit.java", categoryDir);
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//S7End.java.cst
	template = CreateTemplate("style\\hlp\\ap\\S7End.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}S7End.java", categoryDir);
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	#endregion
	
	#region hlp/cm
	//HlpInputData.java.cst
	categoryDir = string.Format(@"{0}\{2}\cm\hlp\hlp{1}\", GetGenPath(), this.HelpFormCode, this.GetTablename(this.SourceTable));
	if (!Directory.Exists(categoryDir))
	{
		Directory.CreateDirectory(categoryDir);
	}
	ClearFolder(categoryDir);
	template = CreateTemplate("style\\hlp\\cm\\HlpInputData.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}Hlp{1}InputData.java", categoryDir, this.HelpFormCode);
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//HlpResultData.java.cst
	template = CreateTemplate("style\\hlp\\cm\\HlpResultData.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}Hlp{1}ResultData.java", categoryDir, this.HelpFormCode);
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	#endregion
	
	#region hlp/pr
	//HlpFrame.java.cst
	categoryDir = string.Format(@"{0}\{2}\pr\hlp\hlp{1}\", GetGenPath(), this.HelpFormCode, this.GetTablename(this.SourceTable));
	if (!Directory.Exists(categoryDir))
	{
		Directory.CreateDirectory(categoryDir);
	}
	ClearFolder(categoryDir);
	template = CreateTemplate("style\\hlp\\pr\\HlpFrame.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}Hlp{1}Frame.java", categoryDir, this.HelpFormCode);
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//HlpInput.java.cst
	template = CreateTemplate("style\\hlp\\pr\\HlpInput.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}Hlp{1}Input.java", categoryDir, this.HelpFormCode);
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//HlpPanel.java.cst
	template = CreateTemplate("style\\hlp\\pr\\HlpPanel.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}Hlp{1}Panel.java", categoryDir, this.HelpFormCode);
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	#endregion
	
	#region pkg/ap
	//AP01.AnswerOutput.java.cst
	categoryDir = string.Format(@"{0}\{3}\ap\{2}\{2}{1}\", GetGenPath(), this.PackageFormCode, this.Package, this.GetTablename(this.SourceTable));
	if (!Directory.Exists(categoryDir))
	{
		Directory.CreateDirectory(categoryDir);
	}
	ClearFolder(categoryDir);
	template = CreateTemplate("style\\pkg\\ap\\AP01.AnswerOutput.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, this.GetAnswerOutputName(Package, this.PackageFormCode));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//AP02.Context.java.cst
	template = CreateTemplate("style\\pkg\\ap\\AP02.Context.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, this.GetContextName(Package, this.PackageFormCode));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//AP03.Control.java.cst
	template = CreateTemplate("style\\pkg\\ap\\AP03.Control.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, this.GetControlName(Package, this.PackageFormCode));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//AP04.Finder.java.cst
	template = CreateTemplate("style\\pkg\\ap\\AP04.Finder.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, this.GetTablename(this.SourceTable)+"Finder");
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//AP05.Updater.java.cst
	template = CreateTemplate("style\\pkg\\ap\\AP05.Updater.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, this.GetTablename(this.SourceTable)+"Updater");
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//S1Initial.java.cst
	template = CreateTemplate("style\\pkg\\ap\\S1Initial.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, "S1Initial");
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//S2InputDataCheck.java.cst
	template = CreateTemplate("style\\pkg\\ap\\S2InputDataCheck.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, "S2InputDataCheck");
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//S2InputKeyCheck.java.cst
	template = CreateTemplate("style\\pkg\\ap\\S2InputKeyCheck.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, "S2InputKeyCheck");
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//S3DataExist.java.cst
	template = CreateTemplate("style\\pkg\\ap\\S3DataExist.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, "S3DataExist");
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//S3DataNotExist.java.cst
	template = CreateTemplate("style\\pkg\\ap\\S3DataNotExist.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, "S3DataNotExist");
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//S3TableReadCheck.java.cst
	template = CreateTemplate("style\\pkg\\ap\\S3TableReadCheck.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, "S3TableReadCheck");
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//S4DataDelete.java.cst
	template = CreateTemplate("style\\pkg\\ap\\S4DataDelete.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, "S4DataDelete");
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//S4DataEditor.java.cst
	template = CreateTemplate("style\\pkg\\ap\\S4DataEditor.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, "S4DataEditor");
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//S4DataEntry.java.cst
	template = CreateTemplate("style\\pkg\\ap\\S4DataEntry.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, "S4DataEntry");
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//S4DataFind.java.cst
	template = CreateTemplate("style\\pkg\\ap\\S4DataFind.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, "S4DataFind");
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//S4DataUpdate.java.cst
	template = CreateTemplate("style\\pkg\\ap\\S4DataUpdate.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, "S4DataUpdate");
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//S5ScreenDataEdit.java.cst
	template = CreateTemplate("style\\pkg\\ap\\S5ScreenDataEdit.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, "S5ScreenDataEdit");
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//S6DataOutput.java.cst
	template = CreateTemplate("style\\pkg\\ap\\S6DataOutput.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, "S6DataOutput");
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//S7End.java.cst
	template = CreateTemplate("style\\pkg\\ap\\S7End.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, "S7End");
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	#endregion
	
	#region pkg/cm
	//CM01.InputData.java.cst
	categoryDir = string.Format(@"{0}\{3}\cm\{2}\{2}{1}\", GetGenPath(), this.PackageFormCode, this.Package, this.GetTablename(this.SourceTable));
	if (!Directory.Exists(categoryDir))
	{
		Directory.CreateDirectory(categoryDir);
	}
	ClearFolder(categoryDir);
	template = CreateTemplate("style\\pkg\\cm\\CM01.InputData.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, this.GetInputDataName(Package, this.PackageFormCode));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//CM02.ResultData.java.cst
	template = CreateTemplate("style\\pkg\\cm\\CM02.ResultData.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, this.GetResultDataName(Package, this.PackageFormCode));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//CM03.RowData.java.cst
	template = CreateTemplate("style\\pkg\\cm\\CM03.RowData.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, this.GetRowDataName(Package, this.PackageFormCode));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	#endregion
	
	#region pkg/pr
	//PR01.ChangeInput.java.cst
	categoryDir = string.Format(@"{0}\{3}\pr\{2}\{2}{1}\", GetGenPath(), this.PackageFormCode, this.Package, this.GetTablename(this.SourceTable));
	if (!Directory.Exists(categoryDir))
	{
		Directory.CreateDirectory(categoryDir);
	}
	ClearFolder(categoryDir);
	template = CreateTemplate("style\\pkg\\pr\\PR01.ChangeInput.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, this.GetChangeInputName(Package, this.PackageFormCode));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//PR02.Confirm.java.cst
	template = CreateTemplate("style\\pkg\\pr\\PR02.Confirm.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, this.GetConfirmName(Package, this.PackageFormCode));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//PR03.Const.java.cst
	template = CreateTemplate("style\\pkg\\pr\\PR03.Const.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, this.GetConstName(Package, this.PackageFormCode));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//PR04.Frame.java.cst
	template = CreateTemplate("style\\pkg\\pr\\PR04.Frame.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, this.GetFrameName(Package, this.PackageFormCode));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//PR05.Input.java.cst
	template = CreateTemplate("style\\pkg\\pr\\PR05.Input.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);
	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, this.GetInputName(Package, this.PackageFormCode));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//PR06.Panel.java.cst
	template = CreateTemplate("style\\pkg\\pr\\PR06.Panel.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, this.GetPanelName(Package, this.PackageFormCode));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	
	//PR07.Result.java.cst
	template = CreateTemplate("style\\pkg\\pr\\PR07.Result.java.cst");
	template.SetProperty("SourceTable", SourceTable);
	template.SetProperty("HelpFormCode",HelpFormCode);
	template.SetProperty("PackageFormCode",PackageFormCode);	template.SetProperty("Package",Package);
	template.SetProperty("Author",Author);
	filePath = string.Format(@"{0}{1}.java", categoryDir, this.GetResultName(Package, this.PackageFormCode));
	sw = GetSW(filePath);
	template.Render(sw);
	sw.Close();
	Response.WriteLine(string.Format("Genrator file {0} ", filePath));
	#endregion
	
}

public CodeTemplate CreateTemplate(string templatefile)
{
	CodeTemplateCompiler compiler = new CodeTemplateCompiler(templatefile);
	compiler.Compile();		
	if (compiler.Errors.Count == 0)
	{
		return compiler.CreateInstance();
	}
	else
	{
		for (int i = 0; i < compiler.Errors.Count; i++)
		{
			Response.WriteLine(compiler.Errors[i].ToString());
		}
		return null;
	}		
}

public static StreamWriter GetSW(string path)
{
	StreamWriter sw = new StreamWriter(path, true, Encoding.UTF8);
	return sw;
}

public void ClearOldData()
{
	if(DeleteOldData)
	{
 		DirectoryInfo di = new DirectoryInfo(GetGenPath());
		foreach (DirectoryInfo directory in di.GetDirectories())
		{
			foreach (FileInfo fileInfo in directory.GetFiles())
			{
				fileInfo.Delete();
			}
		}
	}
}

public void ClearFolder(string path)
{
	DirectoryInfo di = new DirectoryInfo(path);
	foreach (FileInfo fileInfo in di.GetFiles())
	{
			fileInfo.Delete();
			File.Delete(fileInfo.FullName);
	}
		
	foreach (DirectoryInfo directory in di.GetDirectories())
	{
		foreach (FileInfo fileInfo in directory.GetFiles())
		{
			fileInfo.Delete();
			File.Delete(fileInfo.FullName);
		}
		
		directory.Delete();
		Directory.Delete(directory.FullName);
	}
	
	
}

public string GetGenPath()
{
	if (string.IsNullOrEmpty(GeneratePath))
	{
		throw new Exception("Khong xac dinh duoc GenereatePath");
	}
	
	string path = GeneratePath;
	
	if (!path.EndsWith(@"\"))
	{
		path += @"\";
	}
	
	path += "okasan";
	
	if (!Directory.Exists(path))
	{
		Directory.CreateDirectory(path);
	}
	
	return path;
}

public string ReturnObjectClass(string sobject)
{
	Dictionary<string, string> dict = new Dictionary<string, string>();
	string stable = sobject;
	return stable;
}
</script>
