<%-- 
Name:
Author: 
Description: 
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="1. Context"
	Description="Table that the stored procedures should be based on." %>	

<%@ Property Name="FinderCode" Type="System.String" Default="1000" Category="1. Context" Description="Help Form Code" %>
<%@ Property Name="UpdaterCode" Type="System.String" Default="1000" Category="1. Context" Description="Package Form Code" %>

<%@ Property Name="Author" Type="System.String" Default="Huan.Nguyen Van" Category="1. Context" Description="Author" %>
<%@ Property Name="Package" Type="System.String" Default="Package" Category="1. Context" Description="Author kage" %>
<%@ Property Name="Prefix" Type="System.String" Default="Pkg" Category="1. Context" Description="Prefix " %>
<%@ Property Name="EntityName" Type="System.String" Default="EntityName" Category="1. Context" Description="Name of entity" %>

<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SampleStringProperty" Type="System.String" Default="SomeValue" Optional="True" Category="Strings" Description="This is a sample string property." %>
<%@ Property Name="SampleBooleanProperty" Type="System.Boolean" Default="True" Optional="False" Category="Booleans" Description="This is a sample boolean property." %>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%-- Assembly References --%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="System.Data" %>
<%-- Namespace Imports --%>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="System.IO" %>
<!-- #include file="..\\include\\GolineUtilities.inc" -->

	/**
	 * Method find <%=this.EntityName%> from table. <br>
	 * 
	 * @param user BaseUser
	 *            User process
	 * @param filter <%=this.EntityName%>
	 * @exception SQLException
	 * @throws UserException
	 */
	@TransactionAttribute(TransactionAttributeType.REQUIRED)
	public List<<%=this.EntityName%>> find<%=this.EntityName%>(Credential cred, <%=this.EntityName%> filter) throws SQLException,
			UserException {
		
		java.sql.Connection conn = frontResource.getConnection();
		<%=this.Prefix%><%=this.FinderCode%>Control control = new <%=this.Prefix%><%=this.FinderCode%>Control();
		try{
			this.validate(cred, conn);
			
			control.doTask(cred.getBaseUser(), filter, conn);
		} catch (Exception e) {
			context.setRollbackOnly();
			throw e;
		}finally{
			conn.close();
		}
		
		return control.getContext().getDataList();
	}

	/**
	 * Method update <%=this.EntityName%> from table. <br>
	 * 
	 * @param user BaseUser process User
	 * @param data <%=this.EntityName%> 
	 * @exception SQLException
	 * @throws UserException
	 */
	@TransactionAttribute(TransactionAttributeType.REQUIRED)
	public <%=this.EntityName%> update<%=this.EntityName%>(Credential cred, <%=this.EntityName%> data, String action) throws SQLException, UserException {
		java.sql.Connection conn = frontResource.getConnection();
		
		<%=this.Prefix%><%=this.UpdaterCode%>Control control = new <%=this.Prefix%><%=this.UpdaterCode%>Control();
		try{
			this.validate(cred, conn);
			control.doTask(cred.getBaseUser(), data, action, conn);
		} catch (Exception e) {
			context.setRollbackOnly();
			throw e;
		}finally{
			conn.close();
		}

		return control.getContext().getCurrentData();
	}
	
<script runat="template">
// My methods here.

public string SampleMethod()
{
	return "Method output.";
}
</script>