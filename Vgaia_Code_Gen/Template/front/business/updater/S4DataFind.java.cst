<%-- 
Name:
Author: 
Description: 
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="1. Context"
	Description="Table that the stored procedures should be based on." %>	

<%@ Property Name="FinderCode" Type="System.String" Default="1000" Category="1. Context" Description="Help Form Code" %>
<%@ Property Name="UpdaterCode" Type="System.String" Default="1000" Category="1. Context" Description="Package Form Code" %>

<%@ Property Name="Author" Type="System.String" Default="Huan.Nguyen Van" Category="1. Context" Description="Author" %>
<%@ Property Name="Package" Type="System.String" Default="Package" Category="1. Context" Description="Author kage" %>
<%@ Property Name="Prefix" Type="System.String" Default="Pkg" Category="1. Context" Description="Prefix " %>
<%@ Property Name="EntityName" Type="System.String" Default="EntityName" Category="1. Context" Description="Name of entity" %>

<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SampleStringProperty" Type="System.String" Default="SomeValue" Optional="True" Category="Strings" Description="This is a sample string property." %>
<%@ Property Name="SampleBooleanProperty" Type="System.Boolean" Default="True" Optional="False" Category="Booleans" Description="This is a sample boolean property." %>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%-- Assembly References --%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="System.Data" %>
<%-- Namespace Imports --%>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="System.IO" %>
<!-- #include file="..\\..\\..\\include\\GolineUtilities.inc" -->
/*
 * Copyright(C) 2012 Okasan Information Systems Co.,Ltd. All rights reserved.
 */
package jp.co.okasan.business.<%=this.Package%>.<%=this.Prefix.ToLower()%><%=this.UpdaterCode%>;

import java.sql.SQLException;
import java.util.List;

import jp.co.okasan.cmn.base.BaseContext;
import jp.co.okasan.cmn.base.IStage;
import jp.co.okasan.data.<%=this.EntityName%>;
import jp.co.okasan.dao.<%=this.Package%>.<%=this.EntityName%>Finder;

/**
 * S4DataFind Class's Description. <br>
 * 
 * @author: <%=Author%> <%=this.GetCurrentDate()%> Create New
 */
public class S4DataFind implements IStage {

	////////// Class Variables //////////
	
	/** Class name of initial stage */
	private static final String CLASS_NAME = S4DataFind.class.getName();

	/** Method name of initial stage */
	private static final String METHOD_NAME = "doTask";
	
	/** Data finder */
	private <%=this.EntityName%>Finder dataFinder;
	
	////////// Class Constructor //////////
	
	/**
	 * Constructor. <br>
	 * 
	 * @param Nothing
	 * @exception Nothing
	 */
	public S4DataFind() {
		dataFinder = new <%=this.EntityName%>Finder();
	}
		
	////////// Methods Define //////////
	
	/**
	 * Process Data find task <br>
	 * 
	 * @param ctx Context the contextual of <%=this.EntityName%>
	 * @return boolean dotask state
	 * @exception SQLException
	 */
	public boolean doTask(BaseContext<?> ctx) throws SQLException {
		<%=this.Prefix%><%=this.UpdaterCode%>Context context = (<%=this.Prefix%><%=this.UpdaterCode%>Context) ctx;

		// Get filter here
		<%=this.EntityName%> filter = context.getInputData();
	
		// Get data list
		List<<%=this.EntityName%>> dataList = dataFinder.find<%=this.EntityName%>(
				context.getUser(), filter, context.getConnection());
				
		// Check data to return
		if (!dataList.isEmpty()) {
			context.setDataList(dataList);
		}

		return true;
	}
}
<script runat="template">
// My methods here.

public string SampleMethod()
{
	return "Method output.";
}
</script>