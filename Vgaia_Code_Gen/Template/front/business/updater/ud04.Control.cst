<%-- 
Name:
Author: 
Description: 
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="1. Context"
	Description="Table that the stored procedures should be based on." %>	

<%@ Property Name="FinderCode" Type="System.String" Default="1000" Category="1. Context" Description="Help Form Code" %>
<%@ Property Name="UpdaterCode" Type="System.String" Default="1000" Category="1. Context" Description="Package Form Code" %>

<%@ Property Name="Author" Type="System.String" Default="Huan.Nguyen Van" Category="1. Context" Description="Author" %>
<%@ Property Name="Package" Type="System.String" Default="Package" Category="1. Context" Description="Author kage" %>
<%@ Property Name="Prefix" Type="System.String" Default="Pkg" Category="1. Context" Description="Prefix " %>
<%@ Property Name="EntityName" Type="System.String" Default="EntityName" Category="1. Context" Description="Name of entity" %>

<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SampleStringProperty" Type="System.String" Default="SomeValue" Optional="True" Category="Strings" Description="This is a sample string property." %>
<%@ Property Name="SampleBooleanProperty" Type="System.Boolean" Default="True" Optional="False" Category="Booleans" Description="This is a sample boolean property." %>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%-- Assembly References --%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="System.Data" %>
<%-- Namespace Imports --%>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="System.IO" %>
<!-- #include file="..\..\..\\include\\GolineUtilities.inc" -->
/*
 * Copyright(C) 2012 Okasan Information Systems Co.,Ltd. All rights reserved.
 */
package jp.co.okasan.business.<%=this.Package%>.<%=this.Prefix.ToLower()%><%=this.UpdaterCode%>;

import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;

import jp.co.okasan.cmn.UserException;
import jp.co.okasan.constants.ActionType;
import jp.co.okasan.cmn.base.BaseContext;
import jp.co.okasan.data.<%=this.EntityName%>;
import jp.co.okasan.data.BaseUser;

/**
 * <%=this.Prefix%><%=this.UpdaterCode%>Control Class's Description. <br>
 * 
 * @author: <%=Author%> <%=this.GetCurrentDate()%> Create New
 */
public class <%=this.Prefix%><%=this.UpdaterCode%>Control {

	////////// Define Variables //////////
	
	/** Define current context */
	private <%=this.Prefix%><%=this.UpdaterCode%>Context context = null;

	////////// Define Constructor //////////
	
	/**
     * Constructor. <br>
     * 
     * @param Nothing
     * @exception Nothing
     */
	public <%=this.Prefix%><%=this.UpdaterCode%>Control() {
	}
	
	////////// Define Methods //////////
	
	/**
	 * Method process dotask <br>
	 * 
	 * @param user current user
	 * @param filter <%=this.EntityName%> filter
	 * @param conn Connection data
	 * @throws SQLException when have error on SQL
	 * @throws UserException when have error on business
	 */
	public void doTask(BaseUser user, <%=this.EntityName%> data, String action, Connection conn)
	 		throws SQLException, UserException{
				
		this.context = new <%=this.Prefix%><%=this.UpdaterCode%>Context(user, conn);
		this.context.setInputData(data);

		switch (action) {
		case ActionType.CREATE:
			this.doCreate();
			break;
		case ActionType.UPDATE:
			this.doUpdate();
			break;
		case ActionType.DELETE:
			this.doDelete();
			break;
		default:
			throw new UserException("MSG2006", "ERROR: Khong ho tro su kien "
					+ action);
		}
	}
	
	/**
	 * Get current context 
	 *
	 * @return the context
	 */
	public <%=this.Prefix%><%=this.UpdaterCode%>Context getContext() {
		return context;
	}
	
		/**
	 * Process do insert into table <%=this.GetTableDescription(this.SourceTable)%> <br>
	 * 
	 * @throws SQLException
	 * @throws UserException
	 */
	private void doCreate() throws SQLException, UserException {
		// Run initial stage
		new S1Initial().doTask(this.context);

		// Run input data check
		new S2InputDataCheck().doTask(this.context);

		// Run input key check
		new S2InputKeyCheck().doTask(this.context);

		// Run table read check
		new S3TableReadCheck().doTask(this.context);

		// Run data editor
		new S4DataEditor().doTask(this.context);
		
		// Run data entry
		new S4DataEntry().doTask(this.context);

		// Run screen data edit
		new S5ScreenDataEdit().doTask(this.context);

		// Run end stage
		new S7End().doTask(this.context);
	}

	/**
	 * Process do update from table <%=this.GetTableDescription(this.SourceTable)%> <br>
	 * 
	 * @throws SQLException
	 * @throws UserException
	 */
	private void doUpdate() throws SQLException, UserException {
		// Run initial stage
		new S1Initial().doTask(this.context);

		// Run input data check
		new S2InputDataCheck().doTask(this.context);

		// Run input key check
		new S2InputKeyCheck().doTask(this.context);

		// Run table read check
		new S3TableReadCheck().doTask(this.context);

		// Run data editor
		new S4DataEditor().doTask(this.context);
		
		// Run data update
		new S4DataUpdate().doTask(this.context);

		// Run screen data edit
		new S5ScreenDataEdit().doTask(this.context);

		// Run end stage
		new S7End().doTask(this.context);
	}

	/**
	 * Process do delete from table <%=this.GetTableDescription(this.SourceTable)%> <br>
	 * 
	 * @throws SQLException
	 * @throws UserException
	 */
	private void doDelete() throws SQLException, UserException {
		// Run initial stage
		new S1Initial().doTask(this.context);

		// Run input data check
		new S2InputDataCheck().doTask(this.context);

		// Run input key check
		new S2InputKeyCheck().doTask(this.context);

		// Run table read check
		new S3TableReadCheck().doTask(this.context);

		// Run data editor
		new S4DataEditor().doTask(this.context);
		
		// Run data delete
		new S4DataDelete().doTask(this.context);

		// Run screen data edit
		new S5ScreenDataEdit().doTask(this.context);

		// Run end stage
		new S7End().doTask(this.context);
	}
}

<script runat="template">
// My methods here.

public string SampleMethod()
{
	return "Method output.";
}
</script>