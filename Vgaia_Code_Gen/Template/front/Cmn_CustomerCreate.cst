<%-- 
Name:
Author: 
Description: 
--%>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="1. Context"
	Description="Table that the stored procedures should be based on." %>	

<%@ Property Name="Author" Type="System.String" Default="Huan.Nguyen Van" Category="1. Context" Description="Author" %>
<%@ Property Name="Prefix" Type="System.String" Default="014C" Category="1. Context" Description="Prefix " %>
<%@ Property Name="AccoFromNumber" Type="System.String" Default="100000" Category="1. Context" Description="Prefix " %>
<%@ Property Name="AccoToNumber" Type="System.String" Default="103000" Category="1. Context" Description="Prefix " %>

<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SampleStringProperty" Type="System.String" Default="SomeValue" Optional="True" Category="Strings" Description="This is a sample string property." %>
<%@ Property Name="SampleBooleanProperty" Type="System.Boolean" Default="True" Optional="False" Category="Booleans" Description="This is a sample boolean property." %>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>

<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="System.Data" %>
<%-- Assembly References --%>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Assembly Name="System.Data" %>
<%-- Namespace Imports --%>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="System.IO" %>
<!-- #include file="..\\include\\GolineUtilities.inc" -->
<% int from = Convert.ToInt32(this.AccoFromNumber); %>
<% int to = Convert.ToInt32(this.AccoToNumber); %>
<% for(int i = from; i< to; i++){%>
Insert into FIS1.CORTCUSTOMER (CUST_CD,DEL_CD,CUST_NO,TRANSACTION_CD,CUST_FAMILY_NAME,CUST_GIVEN_NAME,CUST_TYPE,BIRTHDAY,SEX,MOBILE_NO,EMAIL_ADRS,EMAIL_FLG,APPROVAL_CD,ID_NUMBER,ISSUE_LOCATION_CD,ISSUE_DATE,EXPIRE_DATE,COUNTRY_CD,BROKER_CD,INTRODUCER_CD,CHANNEL_ID,NUMBER_OF_SIG,ACCO_DIVIDE,ACCO_STS,ACCO_STS_DATE,ACCO_STR_DATE,CONTRACT_NO,ORDER_MONEY_CONF,ORDER_STOCK_CONF,FOREIGN_TYPE,REG_DATE_TIME,REG_USER_ID,UPD_DATE_TIME,UPD_USER_ID) values (<%=i%>,0,'<%=this.Prefix%><%=i%>','DGL','Nguyen','<%=i%>',1,20130801,1,null,null,0,1,'121<%=i%>',10,20130801,0,'VN',null,null,1,0,1,1,20130905,20130905,'DAS0<%=i%>',0,0,1,to_timestamp('05-OCT-13 10.02.17.477000000 AM','DD-MON-RR HH.MI.SS.FF AM'),'HANT01',to_timestamp('05-OCT-13 10.02.17.477000000 AM','DD-MON-RR HH.MI.SS.FF AM'),'HANT01');
<%}%>
<script runat="template">
// My methods here.

public string SampleMethod()
{
	return "Method output.";
}
</script>